#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Smart1Instalment.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BeLine")]
	public partial class Smart1InstallmentDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertAccountFlag(AccountFlag instance);
    partial void UpdateAccountFlag(AccountFlag instance);
    partial void DeleteAccountFlag(AccountFlag instance);
    partial void InsertAccountPayment(AccountPayment instance);
    partial void UpdateAccountPayment(AccountPayment instance);
    partial void DeleteAccountPayment(AccountPayment instance);
    partial void InsertAction(Action instance);
    partial void UpdateAction(Action instance);
    partial void DeleteAction(Action instance);
    partial void InsertActionDetail(ActionDetail instance);
    partial void UpdateActionDetail(ActionDetail instance);
    partial void DeleteActionDetail(ActionDetail instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertDocType(DocType instance);
    partial void UpdateDocType(DocType instance);
    partial void DeleteDocType(DocType instance);
    partial void InsertExpensesAndIncomeData(ExpensesAndIncomeData instance);
    partial void UpdateExpensesAndIncomeData(ExpensesAndIncomeData instance);
    partial void DeleteExpensesAndIncomeData(ExpensesAndIncomeData instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertInstallMent(InstallMent instance);
    partial void UpdateInstallMent(InstallMent instance);
    partial void DeleteInstallMent(InstallMent instance);
    partial void InsertInstallMentDiscountNotice(InstallMentDiscountNotice instance);
    partial void UpdateInstallMentDiscountNotice(InstallMentDiscountNotice instance);
    partial void DeleteInstallMentDiscountNotice(InstallMentDiscountNotice instance);
    partial void InsertInvoiceDetail(InvoiceDetail instance);
    partial void UpdateInvoiceDetail(InvoiceDetail instance);
    partial void DeleteInvoiceDetail(InvoiceDetail instance);
    partial void InsertJobFlag(JobFlag instance);
    partial void UpdateJobFlag(JobFlag instance);
    partial void DeleteJobFlag(JobFlag instance);
    partial void InsertPaymentType(PaymentType instance);
    partial void UpdatePaymentType(PaymentType instance);
    partial void DeletePaymentType(PaymentType instance);
    partial void InsertRank(Rank instance);
    partial void UpdateRank(Rank instance);
    partial void DeleteRank(Rank instance);
    partial void InsertRankActionDetail(RankActionDetail instance);
    partial void UpdateRankActionDetail(RankActionDetail instance);
    partial void DeleteRankActionDetail(RankActionDetail instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserAction(UserAction instance);
    partial void UpdateUserAction(UserAction instance);
    partial void DeleteUserAction(UserAction instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void InsertMovementType(MovementType instance);
    partial void UpdateMovementType(MovementType instance);
    partial void DeleteMovementType(MovementType instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertGroupDetail(GroupDetail instance);
    partial void UpdateGroupDetail(GroupDetail instance);
    partial void DeleteGroupDetail(GroupDetail instance);
    partial void InsertItemSerial(ItemSerial instance);
    partial void UpdateItemSerial(ItemSerial instance);
    partial void DeleteItemSerial(ItemSerial instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    #endregion
		
		public Smart1InstallmentDataClassesDataContext() : 
				base(global::Smart1Instalment.Properties.Settings.Default.BeLineConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Smart1InstallmentDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Smart1InstallmentDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Smart1InstallmentDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Smart1InstallmentDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<AccountFlag> AccountFlags
		{
			get
			{
				return this.GetTable<AccountFlag>();
			}
		}
		
		public System.Data.Linq.Table<AccountPayment> AccountPayments
		{
			get
			{
				return this.GetTable<AccountPayment>();
			}
		}
		
		public System.Data.Linq.Table<Action> Actions
		{
			get
			{
				return this.GetTable<Action>();
			}
		}
		
		public System.Data.Linq.Table<ActionDetail> ActionDetails
		{
			get
			{
				return this.GetTable<ActionDetail>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<DocType> DocTypes
		{
			get
			{
				return this.GetTable<DocType>();
			}
		}
		
		public System.Data.Linq.Table<ExpensesAndIncomeData> ExpensesAndIncomeDatas
		{
			get
			{
				return this.GetTable<ExpensesAndIncomeData>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<InstallMent> InstallMents
		{
			get
			{
				return this.GetTable<InstallMent>();
			}
		}
		
		public System.Data.Linq.Table<InstallMentDiscountNotice> InstallMentDiscountNotices
		{
			get
			{
				return this.GetTable<InstallMentDiscountNotice>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceDetail> InvoiceDetails
		{
			get
			{
				return this.GetTable<InvoiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<JobFlag> JobFlags
		{
			get
			{
				return this.GetTable<JobFlag>();
			}
		}
		
		public System.Data.Linq.Table<PaymentType> PaymentTypes
		{
			get
			{
				return this.GetTable<PaymentType>();
			}
		}
		
		public System.Data.Linq.Table<Rank> Ranks
		{
			get
			{
				return this.GetTable<Rank>();
			}
		}
		
		public System.Data.Linq.Table<RankActionDetail> RankActionDetails
		{
			get
			{
				return this.GetTable<RankActionDetail>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserAction> UserActions
		{
			get
			{
				return this.GetTable<UserAction>();
			}
		}
		
		public System.Data.Linq.Table<Job> Jobs
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<MovementType> MovementTypes
		{
			get
			{
				return this.GetTable<MovementType>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<GroupDetail> GroupDetails
		{
			get
			{
				return this.GetTable<GroupDetail>();
			}
		}
		
		public System.Data.Linq.Table<ItemSerial> ItemSerials
		{
			get
			{
				return this.GetTable<ItemSerial>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InseartSerials")]
		public ISingleResult<InseartSerialsResult> InseartSerials(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemId", DbType="Int")] System.Nullable<int> itemId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemDesc", DbType="NVarChar(MAX)")] string itemDesc, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemSerial", DbType="NVarChar(MAX)")] string itemSerial, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemColor", DbType="NVarChar(MAX)")] string itemColor, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemSize", DbType="NVarChar(MAX)")] string itemSize, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemSceonedDesc", DbType="NVarChar(MAX)")] string itemSceonedDesc, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemBuyPrice", DbType="Decimal(18,3)")] System.Nullable<decimal> itemBuyPrice, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemSellPriceCash", DbType="Decimal(18,3)")] System.Nullable<decimal> itemSellPriceCash, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemSellPriceInstallment", DbType="Decimal(18,3)")] System.Nullable<decimal> itemSellPriceInstallment, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemIsSold", DbType="Bit")] System.Nullable<bool> itemIsSold, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocNum", DbType="Int")] System.Nullable<int> docNum, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocTypeId", DbType="Int")] System.Nullable<int> docTypeId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuantityIn", DbType="Decimal(18,2)")] System.Nullable<decimal> quantityIn, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuantityOut", DbType="Decimal(18,2)")] System.Nullable<decimal> quantityOut, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentBalance", DbType="Decimal(18,2)")] System.Nullable<decimal> currentBalance, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentDate", DbType="DateTime")] System.Nullable<System.DateTime> currentDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountId", DbType="Int")] System.Nullable<int> accountId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsSerial", DbType="Bit")] System.Nullable<bool> isSerial)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemId, itemDesc, itemSerial, itemColor, itemSize, itemSceonedDesc, itemBuyPrice, itemSellPriceCash, itemSellPriceInstallment, itemIsSold, docNum, docTypeId, quantityIn, quantityOut, currentBalance, currentDate, accountId, isSerial);
			return ((ISingleResult<InseartSerialsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InseartInvoiceDetail")]
		public ISingleResult<InseartInvoiceDetailResult> InseartInvoiceDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InvoiceId", DbType="Int")] System.Nullable<int> invoiceId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemId", DbType="Int")] System.Nullable<int> itemId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemSellPrice", DbType="Decimal(18,0)")] System.Nullable<decimal> itemSellPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemBuyPrice", DbType="Decimal(18,0)")] System.Nullable<decimal> itemBuyPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantity", DbType="Decimal(18,0)")] System.Nullable<decimal> quantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InvoiceNotes", DbType="NVarChar(MAX)")] string invoiceNotes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemSerial", DbType="NVarChar(MAX)")] string itemSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemDiscount", DbType="Decimal(18,2)")] System.Nullable<decimal> itemDiscount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemMainQuantity", DbType="Decimal(18,2)")] System.Nullable<decimal> itemMainQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalPrice", DbType="Decimal(18,3)")] System.Nullable<decimal> totalPrice)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), invoiceId, itemId, itemSellPrice, itemBuyPrice, quantity, invoiceNotes, itemSerial, itemDiscount, itemMainQuantity, totalPrice);
			return ((ISingleResult<InseartInvoiceDetailResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountId;
		
		private string _AccountName;
		
		private System.Nullable<int> _AccountFlagId;
		
		private string _Address;
		
		private string _PhoneNum1;
		
		private string _PhoneNum2;
		
		private System.Nullable<System.DateTime> _RegistrationDate;
		
		private System.Nullable<int> _MovementTypeFlagId;
		
		private string _IdentityCardNumber;
		
		private System.Nullable<int> _JobFlagId;
		
		private System.Nullable<int> _AccountChildId;
		
		private System.Nullable<int> _AccountChildForBankCheckId;
		
		private string _IdentificationId1;
		
		private string _IdentificationId2;
		
		private string _IdentificationId3;
		
		private string _IdentificationId4;
		
		private string _IdentificationId5;
		
		private string _IdentificationId6;
		
		private string _IdentificationId7;
		
		private string _IdentificationId8;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnAccountFlagIdChanging(System.Nullable<int> value);
    partial void OnAccountFlagIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNum1Changing(string value);
    partial void OnPhoneNum1Changed();
    partial void OnPhoneNum2Changing(string value);
    partial void OnPhoneNum2Changed();
    partial void OnRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationDateChanged();
    partial void OnMovementTypeFlagIdChanging(System.Nullable<int> value);
    partial void OnMovementTypeFlagIdChanged();
    partial void OnIdentityCardNumberChanging(string value);
    partial void OnIdentityCardNumberChanged();
    partial void OnJobFlagIdChanging(System.Nullable<int> value);
    partial void OnJobFlagIdChanged();
    partial void OnAccountChildIdChanging(System.Nullable<int> value);
    partial void OnAccountChildIdChanged();
    partial void OnAccountChildForBankCheckIdChanging(System.Nullable<int> value);
    partial void OnAccountChildForBankCheckIdChanged();
    partial void OnIdentificationId1Changing(string value);
    partial void OnIdentificationId1Changed();
    partial void OnIdentificationId2Changing(string value);
    partial void OnIdentificationId2Changed();
    partial void OnIdentificationId3Changing(string value);
    partial void OnIdentificationId3Changed();
    partial void OnIdentificationId4Changing(string value);
    partial void OnIdentificationId4Changed();
    partial void OnIdentificationId5Changing(string value);
    partial void OnIdentificationId5Changed();
    partial void OnIdentificationId6Changing(string value);
    partial void OnIdentificationId6Changed();
    partial void OnIdentificationId7Changing(string value);
    partial void OnIdentificationId7Changed();
    partial void OnIdentificationId8Changing(string value);
    partial void OnIdentificationId8Changed();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(MAX)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountFlagId", DbType="Int")]
		public System.Nullable<int> AccountFlagId
		{
			get
			{
				return this._AccountFlagId;
			}
			set
			{
				if ((this._AccountFlagId != value))
				{
					this.OnAccountFlagIdChanging(value);
					this.SendPropertyChanging();
					this._AccountFlagId = value;
					this.SendPropertyChanged("AccountFlagId");
					this.OnAccountFlagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNum1", DbType="NVarChar(MAX)")]
		public string PhoneNum1
		{
			get
			{
				return this._PhoneNum1;
			}
			set
			{
				if ((this._PhoneNum1 != value))
				{
					this.OnPhoneNum1Changing(value);
					this.SendPropertyChanging();
					this._PhoneNum1 = value;
					this.SendPropertyChanged("PhoneNum1");
					this.OnPhoneNum1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNum2", DbType="NVarChar(MAX)")]
		public string PhoneNum2
		{
			get
			{
				return this._PhoneNum2;
			}
			set
			{
				if ((this._PhoneNum2 != value))
				{
					this.OnPhoneNum2Changing(value);
					this.SendPropertyChanging();
					this._PhoneNum2 = value;
					this.SendPropertyChanged("PhoneNum2");
					this.OnPhoneNum2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovementTypeFlagId", DbType="Int")]
		public System.Nullable<int> MovementTypeFlagId
		{
			get
			{
				return this._MovementTypeFlagId;
			}
			set
			{
				if ((this._MovementTypeFlagId != value))
				{
					this.OnMovementTypeFlagIdChanging(value);
					this.SendPropertyChanging();
					this._MovementTypeFlagId = value;
					this.SendPropertyChanged("MovementTypeFlagId");
					this.OnMovementTypeFlagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCardNumber", DbType="NVarChar(MAX)")]
		public string IdentityCardNumber
		{
			get
			{
				return this._IdentityCardNumber;
			}
			set
			{
				if ((this._IdentityCardNumber != value))
				{
					this.OnIdentityCardNumberChanging(value);
					this.SendPropertyChanging();
					this._IdentityCardNumber = value;
					this.SendPropertyChanged("IdentityCardNumber");
					this.OnIdentityCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobFlagId", DbType="Int")]
		public System.Nullable<int> JobFlagId
		{
			get
			{
				return this._JobFlagId;
			}
			set
			{
				if ((this._JobFlagId != value))
				{
					this.OnJobFlagIdChanging(value);
					this.SendPropertyChanging();
					this._JobFlagId = value;
					this.SendPropertyChanged("JobFlagId");
					this.OnJobFlagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountChildId", DbType="Int")]
		public System.Nullable<int> AccountChildId
		{
			get
			{
				return this._AccountChildId;
			}
			set
			{
				if ((this._AccountChildId != value))
				{
					this.OnAccountChildIdChanging(value);
					this.SendPropertyChanging();
					this._AccountChildId = value;
					this.SendPropertyChanged("AccountChildId");
					this.OnAccountChildIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountChildForBankCheckId", DbType="Int")]
		public System.Nullable<int> AccountChildForBankCheckId
		{
			get
			{
				return this._AccountChildForBankCheckId;
			}
			set
			{
				if ((this._AccountChildForBankCheckId != value))
				{
					this.OnAccountChildForBankCheckIdChanging(value);
					this.SendPropertyChanging();
					this._AccountChildForBankCheckId = value;
					this.SendPropertyChanged("AccountChildForBankCheckId");
					this.OnAccountChildForBankCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentificationId1", DbType="NVarChar(MAX)")]
		public string IdentificationId1
		{
			get
			{
				return this._IdentificationId1;
			}
			set
			{
				if ((this._IdentificationId1 != value))
				{
					this.OnIdentificationId1Changing(value);
					this.SendPropertyChanging();
					this._IdentificationId1 = value;
					this.SendPropertyChanged("IdentificationId1");
					this.OnIdentificationId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentificationId2", DbType="NVarChar(MAX)")]
		public string IdentificationId2
		{
			get
			{
				return this._IdentificationId2;
			}
			set
			{
				if ((this._IdentificationId2 != value))
				{
					this.OnIdentificationId2Changing(value);
					this.SendPropertyChanging();
					this._IdentificationId2 = value;
					this.SendPropertyChanged("IdentificationId2");
					this.OnIdentificationId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentificationId3", DbType="NVarChar(MAX)")]
		public string IdentificationId3
		{
			get
			{
				return this._IdentificationId3;
			}
			set
			{
				if ((this._IdentificationId3 != value))
				{
					this.OnIdentificationId3Changing(value);
					this.SendPropertyChanging();
					this._IdentificationId3 = value;
					this.SendPropertyChanged("IdentificationId3");
					this.OnIdentificationId3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentificationId4", DbType="NVarChar(MAX)")]
		public string IdentificationId4
		{
			get
			{
				return this._IdentificationId4;
			}
			set
			{
				if ((this._IdentificationId4 != value))
				{
					this.OnIdentificationId4Changing(value);
					this.SendPropertyChanging();
					this._IdentificationId4 = value;
					this.SendPropertyChanged("IdentificationId4");
					this.OnIdentificationId4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentificationId5", DbType="NVarChar(MAX)")]
		public string IdentificationId5
		{
			get
			{
				return this._IdentificationId5;
			}
			set
			{
				if ((this._IdentificationId5 != value))
				{
					this.OnIdentificationId5Changing(value);
					this.SendPropertyChanging();
					this._IdentificationId5 = value;
					this.SendPropertyChanged("IdentificationId5");
					this.OnIdentificationId5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentificationId6", DbType="NVarChar(MAX)")]
		public string IdentificationId6
		{
			get
			{
				return this._IdentificationId6;
			}
			set
			{
				if ((this._IdentificationId6 != value))
				{
					this.OnIdentificationId6Changing(value);
					this.SendPropertyChanging();
					this._IdentificationId6 = value;
					this.SendPropertyChanged("IdentificationId6");
					this.OnIdentificationId6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentificationId7", DbType="NVarChar(MAX)")]
		public string IdentificationId7
		{
			get
			{
				return this._IdentificationId7;
			}
			set
			{
				if ((this._IdentificationId7 != value))
				{
					this.OnIdentificationId7Changing(value);
					this.SendPropertyChanging();
					this._IdentificationId7 = value;
					this.SendPropertyChanged("IdentificationId7");
					this.OnIdentificationId7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentificationId8", DbType="NVarChar(MAX)")]
		public string IdentificationId8
		{
			get
			{
				return this._IdentificationId8;
			}
			set
			{
				if ((this._IdentificationId8 != value))
				{
					this.OnIdentificationId8Changing(value);
					this.SendPropertyChanging();
					this._IdentificationId8 = value;
					this.SendPropertyChanged("IdentificationId8");
					this.OnIdentificationId8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountFlag")]
	public partial class AccountFlag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountFlagId;
		
		private string _AccountFlagDesc;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountFlagIdChanging(int value);
    partial void OnAccountFlagIdChanged();
    partial void OnAccountFlagDescChanging(string value);
    partial void OnAccountFlagDescChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public AccountFlag()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountFlagId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountFlagId
		{
			get
			{
				return this._AccountFlagId;
			}
			set
			{
				if ((this._AccountFlagId != value))
				{
					this.OnAccountFlagIdChanging(value);
					this.SendPropertyChanging();
					this._AccountFlagId = value;
					this.SendPropertyChanged("AccountFlagId");
					this.OnAccountFlagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountFlagDesc", DbType="NVarChar(MAX)")]
		public string AccountFlagDesc
		{
			get
			{
				return this._AccountFlagDesc;
			}
			set
			{
				if ((this._AccountFlagDesc != value))
				{
					this.OnAccountFlagDescChanging(value);
					this.SendPropertyChanging();
					this._AccountFlagDesc = value;
					this.SendPropertyChanged("AccountFlagDesc");
					this.OnAccountFlagDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountPayment")]
	public partial class AccountPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountPaymentId;
		
		private System.Nullable<int> _PaymentSerial;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<decimal> _PaymentDebit;
		
		private System.Nullable<decimal> _PaymentCredit;
		
		private System.Nullable<decimal> _PaymentBalance;
		
		private string _PaymentNote;
		
		private string _UserId;
		
		private System.Nullable<int> _PaymentTypeId;
		
		private System.Nullable<int> _DocTypeId;
		
		private System.Nullable<int> _InvoiceId;
		
		private System.Nullable<int> _InstallmentId;
		
		private System.Nullable<int> _AccountChildForBankCheckId;
		
		private System.Nullable<int> _AccountChildId;
		
		private System.Nullable<int> _Account2Id;
		
		private System.Nullable<decimal> _TotalValueBeforeDisscount;
		
		private System.Nullable<int> _CarCounterMainAccountId;
		
		private System.Nullable<bool> _IsRelatedCarCounterMainAccount;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountPaymentIdChanging(int value);
    partial void OnAccountPaymentIdChanged();
    partial void OnPaymentSerialChanging(System.Nullable<int> value);
    partial void OnPaymentSerialChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnPaymentDebitChanging(System.Nullable<decimal> value);
    partial void OnPaymentDebitChanged();
    partial void OnPaymentCreditChanging(System.Nullable<decimal> value);
    partial void OnPaymentCreditChanged();
    partial void OnPaymentBalanceChanging(System.Nullable<decimal> value);
    partial void OnPaymentBalanceChanged();
    partial void OnPaymentNoteChanging(string value);
    partial void OnPaymentNoteChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnPaymentTypeIdChanging(System.Nullable<int> value);
    partial void OnPaymentTypeIdChanged();
    partial void OnDocTypeIdChanging(System.Nullable<int> value);
    partial void OnDocTypeIdChanged();
    partial void OnInvoiceIdChanging(System.Nullable<int> value);
    partial void OnInvoiceIdChanged();
    partial void OnInstallmentIdChanging(System.Nullable<int> value);
    partial void OnInstallmentIdChanged();
    partial void OnAccountChildForBankCheckIdChanging(System.Nullable<int> value);
    partial void OnAccountChildForBankCheckIdChanged();
    partial void OnAccountChildIdChanging(System.Nullable<int> value);
    partial void OnAccountChildIdChanged();
    partial void OnAccount2IdChanging(System.Nullable<int> value);
    partial void OnAccount2IdChanged();
    partial void OnTotalValueBeforeDisscountChanging(System.Nullable<decimal> value);
    partial void OnTotalValueBeforeDisscountChanged();
    partial void OnCarCounterMainAccountIdChanging(System.Nullable<int> value);
    partial void OnCarCounterMainAccountIdChanged();
    partial void OnIsRelatedCarCounterMainAccountChanging(System.Nullable<bool> value);
    partial void OnIsRelatedCarCounterMainAccountChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public AccountPayment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountPaymentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountPaymentId
		{
			get
			{
				return this._AccountPaymentId;
			}
			set
			{
				if ((this._AccountPaymentId != value))
				{
					this.OnAccountPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._AccountPaymentId = value;
					this.SendPropertyChanged("AccountPaymentId");
					this.OnAccountPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentSerial", DbType="Int")]
		public System.Nullable<int> PaymentSerial
		{
			get
			{
				return this._PaymentSerial;
			}
			set
			{
				if ((this._PaymentSerial != value))
				{
					this.OnPaymentSerialChanging(value);
					this.SendPropertyChanging();
					this._PaymentSerial = value;
					this.SendPropertyChanged("PaymentSerial");
					this.OnPaymentSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="Date")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDebit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PaymentDebit
		{
			get
			{
				return this._PaymentDebit;
			}
			set
			{
				if ((this._PaymentDebit != value))
				{
					this.OnPaymentDebitChanging(value);
					this.SendPropertyChanging();
					this._PaymentDebit = value;
					this.SendPropertyChanged("PaymentDebit");
					this.OnPaymentDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCredit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PaymentCredit
		{
			get
			{
				return this._PaymentCredit;
			}
			set
			{
				if ((this._PaymentCredit != value))
				{
					this.OnPaymentCreditChanging(value);
					this.SendPropertyChanging();
					this._PaymentCredit = value;
					this.SendPropertyChanged("PaymentCredit");
					this.OnPaymentCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentBalance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PaymentBalance
		{
			get
			{
				return this._PaymentBalance;
			}
			set
			{
				if ((this._PaymentBalance != value))
				{
					this.OnPaymentBalanceChanging(value);
					this.SendPropertyChanging();
					this._PaymentBalance = value;
					this.SendPropertyChanged("PaymentBalance");
					this.OnPaymentBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentNote", DbType="NVarChar(MAX)")]
		public string PaymentNote
		{
			get
			{
				return this._PaymentNote;
			}
			set
			{
				if ((this._PaymentNote != value))
				{
					this.OnPaymentNoteChanging(value);
					this.SendPropertyChanging();
					this._PaymentNote = value;
					this.SendPropertyChanged("PaymentNote");
					this.OnPaymentNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeId", DbType="Int")]
		public System.Nullable<int> PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					this.OnPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeId = value;
					this.SendPropertyChanged("PaymentTypeId");
					this.OnPaymentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocTypeId", DbType="Int")]
		public System.Nullable<int> DocTypeId
		{
			get
			{
				return this._DocTypeId;
			}
			set
			{
				if ((this._DocTypeId != value))
				{
					this.OnDocTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DocTypeId = value;
					this.SendPropertyChanged("DocTypeId");
					this.OnDocTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallmentId", DbType="Int")]
		public System.Nullable<int> InstallmentId
		{
			get
			{
				return this._InstallmentId;
			}
			set
			{
				if ((this._InstallmentId != value))
				{
					this.OnInstallmentIdChanging(value);
					this.SendPropertyChanging();
					this._InstallmentId = value;
					this.SendPropertyChanged("InstallmentId");
					this.OnInstallmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountChildForBankCheckId", DbType="Int")]
		public System.Nullable<int> AccountChildForBankCheckId
		{
			get
			{
				return this._AccountChildForBankCheckId;
			}
			set
			{
				if ((this._AccountChildForBankCheckId != value))
				{
					this.OnAccountChildForBankCheckIdChanging(value);
					this.SendPropertyChanging();
					this._AccountChildForBankCheckId = value;
					this.SendPropertyChanged("AccountChildForBankCheckId");
					this.OnAccountChildForBankCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountChildId", DbType="Int")]
		public System.Nullable<int> AccountChildId
		{
			get
			{
				return this._AccountChildId;
			}
			set
			{
				if ((this._AccountChildId != value))
				{
					this.OnAccountChildIdChanging(value);
					this.SendPropertyChanging();
					this._AccountChildId = value;
					this.SendPropertyChanged("AccountChildId");
					this.OnAccountChildIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account2Id", DbType="Int")]
		public System.Nullable<int> Account2Id
		{
			get
			{
				return this._Account2Id;
			}
			set
			{
				if ((this._Account2Id != value))
				{
					this.OnAccount2IdChanging(value);
					this.SendPropertyChanging();
					this._Account2Id = value;
					this.SendPropertyChanged("Account2Id");
					this.OnAccount2IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalValueBeforeDisscount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalValueBeforeDisscount
		{
			get
			{
				return this._TotalValueBeforeDisscount;
			}
			set
			{
				if ((this._TotalValueBeforeDisscount != value))
				{
					this.OnTotalValueBeforeDisscountChanging(value);
					this.SendPropertyChanging();
					this._TotalValueBeforeDisscount = value;
					this.SendPropertyChanged("TotalValueBeforeDisscount");
					this.OnTotalValueBeforeDisscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarCounterMainAccountId", DbType="Int")]
		public System.Nullable<int> CarCounterMainAccountId
		{
			get
			{
				return this._CarCounterMainAccountId;
			}
			set
			{
				if ((this._CarCounterMainAccountId != value))
				{
					this.OnCarCounterMainAccountIdChanging(value);
					this.SendPropertyChanging();
					this._CarCounterMainAccountId = value;
					this.SendPropertyChanged("CarCounterMainAccountId");
					this.OnCarCounterMainAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRelatedCarCounterMainAccount", DbType="Bit")]
		public System.Nullable<bool> IsRelatedCarCounterMainAccount
		{
			get
			{
				return this._IsRelatedCarCounterMainAccount;
			}
			set
			{
				if ((this._IsRelatedCarCounterMainAccount != value))
				{
					this.OnIsRelatedCarCounterMainAccountChanging(value);
					this.SendPropertyChanging();
					this._IsRelatedCarCounterMainAccount = value;
					this.SendPropertyChanged("IsRelatedCarCounterMainAccount");
					this.OnIsRelatedCarCounterMainAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Action")]
	public partial class Action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActionId;
		
		private string _ActionName;
		
		private System.Nullable<bool> _IsActive;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionIdChanging(int value);
    partial void OnActionIdChanged();
    partial void OnActionNameChanging(string value);
    partial void OnActionNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Action()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActionId
		{
			get
			{
				return this._ActionId;
			}
			set
			{
				if ((this._ActionId != value))
				{
					this.OnActionIdChanging(value);
					this.SendPropertyChanging();
					this._ActionId = value;
					this.SendPropertyChanged("ActionId");
					this.OnActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this.OnActionNameChanging(value);
					this.SendPropertyChanging();
					this._ActionName = value;
					this.SendPropertyChanged("ActionName");
					this.OnActionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionDetail")]
	public partial class ActionDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActionDetailId;
		
		private System.Nullable<int> _ActionId;
		
		private string _ActionDetailName;
		
		private System.Nullable<bool> _IsActive;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionDetailIdChanging(int value);
    partial void OnActionDetailIdChanged();
    partial void OnActionIdChanging(System.Nullable<int> value);
    partial void OnActionIdChanged();
    partial void OnActionDetailNameChanging(string value);
    partial void OnActionDetailNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public ActionDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActionDetailId
		{
			get
			{
				return this._ActionDetailId;
			}
			set
			{
				if ((this._ActionDetailId != value))
				{
					this.OnActionDetailIdChanging(value);
					this.SendPropertyChanging();
					this._ActionDetailId = value;
					this.SendPropertyChanged("ActionDetailId");
					this.OnActionDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionId", DbType="Int")]
		public System.Nullable<int> ActionId
		{
			get
			{
				return this._ActionId;
			}
			set
			{
				if ((this._ActionId != value))
				{
					this.OnActionIdChanging(value);
					this.SendPropertyChanging();
					this._ActionId = value;
					this.SendPropertyChanged("ActionId");
					this.OnActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDetailName", DbType="NVarChar(MAX)")]
		public string ActionDetailName
		{
			get
			{
				return this._ActionDetailName;
			}
			set
			{
				if ((this._ActionDetailName != value))
				{
					this.OnActionDetailNameChanging(value);
					this.SendPropertyChanging();
					this._ActionDetailName = value;
					this.SendPropertyChanged("ActionDetailName");
					this.OnActionDetailNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyId;
		
		private string _CompanyName;
		
		private string _CompanyTell1;
		
		private string _CompanyTell2;
		
		private string _CompanyAddress;
		
		private string _CompanyLogo;
		
		private System.Nullable<bool> _CompanyIsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyTell1Changing(string value);
    partial void OnCompanyTell1Changed();
    partial void OnCompanyTell2Changing(string value);
    partial void OnCompanyTell2Changed();
    partial void OnCompanyAddressChanging(string value);
    partial void OnCompanyAddressChanged();
    partial void OnCompanyLogoChanging(string value);
    partial void OnCompanyLogoChanged();
    partial void OnCompanyIsActiveChanging(System.Nullable<bool> value);
    partial void OnCompanyIsActiveChanged();
    #endregion
		
		public Company()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTell1", DbType="NVarChar(MAX)")]
		public string CompanyTell1
		{
			get
			{
				return this._CompanyTell1;
			}
			set
			{
				if ((this._CompanyTell1 != value))
				{
					this.OnCompanyTell1Changing(value);
					this.SendPropertyChanging();
					this._CompanyTell1 = value;
					this.SendPropertyChanged("CompanyTell1");
					this.OnCompanyTell1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTell2", DbType="NVarChar(MAX)")]
		public string CompanyTell2
		{
			get
			{
				return this._CompanyTell2;
			}
			set
			{
				if ((this._CompanyTell2 != value))
				{
					this.OnCompanyTell2Changing(value);
					this.SendPropertyChanging();
					this._CompanyTell2 = value;
					this.SendPropertyChanged("CompanyTell2");
					this.OnCompanyTell2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyAddress", DbType="NVarChar(MAX)")]
		public string CompanyAddress
		{
			get
			{
				return this._CompanyAddress;
			}
			set
			{
				if ((this._CompanyAddress != value))
				{
					this.OnCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._CompanyAddress = value;
					this.SendPropertyChanged("CompanyAddress");
					this.OnCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyLogo", DbType="NVarChar(MAX)")]
		public string CompanyLogo
		{
			get
			{
				return this._CompanyLogo;
			}
			set
			{
				if ((this._CompanyLogo != value))
				{
					this.OnCompanyLogoChanging(value);
					this.SendPropertyChanging();
					this._CompanyLogo = value;
					this.SendPropertyChanged("CompanyLogo");
					this.OnCompanyLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyIsActive", DbType="Bit")]
		public System.Nullable<bool> CompanyIsActive
		{
			get
			{
				return this._CompanyIsActive;
			}
			set
			{
				if ((this._CompanyIsActive != value))
				{
					this.OnCompanyIsActiveChanging(value);
					this.SendPropertyChanging();
					this._CompanyIsActive = value;
					this.SendPropertyChanged("CompanyIsActive");
					this.OnCompanyIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocType")]
	public partial class DocType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocTypeId;
		
		private string _DocTypeDesc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocTypeIdChanging(int value);
    partial void OnDocTypeIdChanged();
    partial void OnDocTypeDescChanging(string value);
    partial void OnDocTypeDescChanged();
    #endregion
		
		public DocType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocTypeId
		{
			get
			{
				return this._DocTypeId;
			}
			set
			{
				if ((this._DocTypeId != value))
				{
					this.OnDocTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DocTypeId = value;
					this.SendPropertyChanged("DocTypeId");
					this.OnDocTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocTypeDesc", DbType="NVarChar(MAX)")]
		public string DocTypeDesc
		{
			get
			{
				return this._DocTypeDesc;
			}
			set
			{
				if ((this._DocTypeDesc != value))
				{
					this.OnDocTypeDescChanging(value);
					this.SendPropertyChanging();
					this._DocTypeDesc = value;
					this.SendPropertyChanged("DocTypeDesc");
					this.OnDocTypeDescChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExpensesAndIncomeData")]
	public partial class ExpensesAndIncomeData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExpensesAndIncomeDataId;
		
		private System.Nullable<int> _AccountExpensesAndIncomeId;
		
		private System.Nullable<System.DateTime> _ExpensesAndIncomeDate;
		
		private System.Nullable<decimal> _ExpensesAndIncomeValue;
		
		private string _ExpensesAndIncomeNotes;
		
		private System.Nullable<bool> _ExpensesIsSalary;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _AccountSafeId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpensesAndIncomeDataIdChanging(int value);
    partial void OnExpensesAndIncomeDataIdChanged();
    partial void OnAccountExpensesAndIncomeIdChanging(System.Nullable<int> value);
    partial void OnAccountExpensesAndIncomeIdChanged();
    partial void OnExpensesAndIncomeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpensesAndIncomeDateChanged();
    partial void OnExpensesAndIncomeValueChanging(System.Nullable<decimal> value);
    partial void OnExpensesAndIncomeValueChanged();
    partial void OnExpensesAndIncomeNotesChanging(string value);
    partial void OnExpensesAndIncomeNotesChanged();
    partial void OnExpensesIsSalaryChanging(System.Nullable<bool> value);
    partial void OnExpensesIsSalaryChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnAccountSafeIdChanging(System.Nullable<int> value);
    partial void OnAccountSafeIdChanged();
    #endregion
		
		public ExpensesAndIncomeData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpensesAndIncomeDataId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExpensesAndIncomeDataId
		{
			get
			{
				return this._ExpensesAndIncomeDataId;
			}
			set
			{
				if ((this._ExpensesAndIncomeDataId != value))
				{
					this.OnExpensesAndIncomeDataIdChanging(value);
					this.SendPropertyChanging();
					this._ExpensesAndIncomeDataId = value;
					this.SendPropertyChanged("ExpensesAndIncomeDataId");
					this.OnExpensesAndIncomeDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountExpensesAndIncomeId", DbType="Int")]
		public System.Nullable<int> AccountExpensesAndIncomeId
		{
			get
			{
				return this._AccountExpensesAndIncomeId;
			}
			set
			{
				if ((this._AccountExpensesAndIncomeId != value))
				{
					this.OnAccountExpensesAndIncomeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountExpensesAndIncomeId = value;
					this.SendPropertyChanged("AccountExpensesAndIncomeId");
					this.OnAccountExpensesAndIncomeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpensesAndIncomeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpensesAndIncomeDate
		{
			get
			{
				return this._ExpensesAndIncomeDate;
			}
			set
			{
				if ((this._ExpensesAndIncomeDate != value))
				{
					this.OnExpensesAndIncomeDateChanging(value);
					this.SendPropertyChanging();
					this._ExpensesAndIncomeDate = value;
					this.SendPropertyChanged("ExpensesAndIncomeDate");
					this.OnExpensesAndIncomeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpensesAndIncomeValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ExpensesAndIncomeValue
		{
			get
			{
				return this._ExpensesAndIncomeValue;
			}
			set
			{
				if ((this._ExpensesAndIncomeValue != value))
				{
					this.OnExpensesAndIncomeValueChanging(value);
					this.SendPropertyChanging();
					this._ExpensesAndIncomeValue = value;
					this.SendPropertyChanged("ExpensesAndIncomeValue");
					this.OnExpensesAndIncomeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpensesAndIncomeNotes", DbType="NVarChar(MAX)")]
		public string ExpensesAndIncomeNotes
		{
			get
			{
				return this._ExpensesAndIncomeNotes;
			}
			set
			{
				if ((this._ExpensesAndIncomeNotes != value))
				{
					this.OnExpensesAndIncomeNotesChanging(value);
					this.SendPropertyChanging();
					this._ExpensesAndIncomeNotes = value;
					this.SendPropertyChanged("ExpensesAndIncomeNotes");
					this.OnExpensesAndIncomeNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpensesIsSalary", DbType="Bit")]
		public System.Nullable<bool> ExpensesIsSalary
		{
			get
			{
				return this._ExpensesIsSalary;
			}
			set
			{
				if ((this._ExpensesIsSalary != value))
				{
					this.OnExpensesIsSalaryChanging(value);
					this.SendPropertyChanging();
					this._ExpensesIsSalary = value;
					this.SendPropertyChanged("ExpensesIsSalary");
					this.OnExpensesIsSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSafeId", DbType="Int")]
		public System.Nullable<int> AccountSafeId
		{
			get
			{
				return this._AccountSafeId;
			}
			set
			{
				if ((this._AccountSafeId != value))
				{
					this.OnAccountSafeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountSafeId = value;
					this.SendPropertyChanged("AccountSafeId");
					this.OnAccountSafeIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Group]")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupId;
		
		private string _GroupDesc;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnGroupDescChanging(string value);
    partial void OnGroupDescChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Group()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupDesc", DbType="NVarChar(MAX)")]
		public string GroupDesc
		{
			get
			{
				return this._GroupDesc;
			}
			set
			{
				if ((this._GroupDesc != value))
				{
					this.OnGroupDescChanging(value);
					this.SendPropertyChanging();
					this._GroupDesc = value;
					this.SendPropertyChanged("GroupDesc");
					this.OnGroupDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstallMent")]
	public partial class InstallMent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstallMentId;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<System.DateTime> _InstallMentDate;
		
		private System.Nullable<System.DateTime> _InstallMentPaymentDate;
		
		private System.Nullable<decimal> _InstallMentValue;
		
		private System.Nullable<decimal> _InstallMentWin;
		
		private System.Nullable<int> _InvoiceId;
		
		private System.Nullable<bool> _IsDiscountNotice;
		
		private System.Nullable<decimal> _DiscountNotice;
		
		private System.Nullable<bool> _InstallMentIsClosed;
		
		private System.Nullable<int> _AccountSafeId;
		
		private System.Nullable<bool> _InstallMentIsPayed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstallMentIdChanging(int value);
    partial void OnInstallMentIdChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnInstallMentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallMentDateChanged();
    partial void OnInstallMentPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallMentPaymentDateChanged();
    partial void OnInstallMentValueChanging(System.Nullable<decimal> value);
    partial void OnInstallMentValueChanged();
    partial void OnInstallMentWinChanging(System.Nullable<decimal> value);
    partial void OnInstallMentWinChanged();
    partial void OnInvoiceIdChanging(System.Nullable<int> value);
    partial void OnInvoiceIdChanged();
    partial void OnIsDiscountNoticeChanging(System.Nullable<bool> value);
    partial void OnIsDiscountNoticeChanged();
    partial void OnDiscountNoticeChanging(System.Nullable<decimal> value);
    partial void OnDiscountNoticeChanged();
    partial void OnInstallMentIsClosedChanging(System.Nullable<bool> value);
    partial void OnInstallMentIsClosedChanged();
    partial void OnAccountSafeIdChanging(System.Nullable<int> value);
    partial void OnAccountSafeIdChanged();
    partial void OnInstallMentIsPayedChanging(System.Nullable<bool> value);
    partial void OnInstallMentIsPayedChanged();
    #endregion
		
		public InstallMent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstallMentId
		{
			get
			{
				return this._InstallMentId;
			}
			set
			{
				if ((this._InstallMentId != value))
				{
					this.OnInstallMentIdChanging(value);
					this.SendPropertyChanging();
					this._InstallMentId = value;
					this.SendPropertyChanged("InstallMentId");
					this.OnInstallMentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InstallMentDate
		{
			get
			{
				return this._InstallMentDate;
			}
			set
			{
				if ((this._InstallMentDate != value))
				{
					this.OnInstallMentDateChanging(value);
					this.SendPropertyChanging();
					this._InstallMentDate = value;
					this.SendPropertyChanged("InstallMentDate");
					this.OnInstallMentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentPaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InstallMentPaymentDate
		{
			get
			{
				return this._InstallMentPaymentDate;
			}
			set
			{
				if ((this._InstallMentPaymentDate != value))
				{
					this.OnInstallMentPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._InstallMentPaymentDate = value;
					this.SendPropertyChanged("InstallMentPaymentDate");
					this.OnInstallMentPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InstallMentValue
		{
			get
			{
				return this._InstallMentValue;
			}
			set
			{
				if ((this._InstallMentValue != value))
				{
					this.OnInstallMentValueChanging(value);
					this.SendPropertyChanging();
					this._InstallMentValue = value;
					this.SendPropertyChanged("InstallMentValue");
					this.OnInstallMentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentWin", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InstallMentWin
		{
			get
			{
				return this._InstallMentWin;
			}
			set
			{
				if ((this._InstallMentWin != value))
				{
					this.OnInstallMentWinChanging(value);
					this.SendPropertyChanging();
					this._InstallMentWin = value;
					this.SendPropertyChanged("InstallMentWin");
					this.OnInstallMentWinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDiscountNotice", DbType="Bit")]
		public System.Nullable<bool> IsDiscountNotice
		{
			get
			{
				return this._IsDiscountNotice;
			}
			set
			{
				if ((this._IsDiscountNotice != value))
				{
					this.OnIsDiscountNoticeChanging(value);
					this.SendPropertyChanging();
					this._IsDiscountNotice = value;
					this.SendPropertyChanged("IsDiscountNotice");
					this.OnIsDiscountNoticeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountNotice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DiscountNotice
		{
			get
			{
				return this._DiscountNotice;
			}
			set
			{
				if ((this._DiscountNotice != value))
				{
					this.OnDiscountNoticeChanging(value);
					this.SendPropertyChanging();
					this._DiscountNotice = value;
					this.SendPropertyChanged("DiscountNotice");
					this.OnDiscountNoticeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentIsClosed", DbType="Bit")]
		public System.Nullable<bool> InstallMentIsClosed
		{
			get
			{
				return this._InstallMentIsClosed;
			}
			set
			{
				if ((this._InstallMentIsClosed != value))
				{
					this.OnInstallMentIsClosedChanging(value);
					this.SendPropertyChanging();
					this._InstallMentIsClosed = value;
					this.SendPropertyChanged("InstallMentIsClosed");
					this.OnInstallMentIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSafeId", DbType="Int")]
		public System.Nullable<int> AccountSafeId
		{
			get
			{
				return this._AccountSafeId;
			}
			set
			{
				if ((this._AccountSafeId != value))
				{
					this.OnAccountSafeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountSafeId = value;
					this.SendPropertyChanged("AccountSafeId");
					this.OnAccountSafeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentIsPayed", DbType="Bit")]
		public System.Nullable<bool> InstallMentIsPayed
		{
			get
			{
				return this._InstallMentIsPayed;
			}
			set
			{
				if ((this._InstallMentIsPayed != value))
				{
					this.OnInstallMentIsPayedChanging(value);
					this.SendPropertyChanging();
					this._InstallMentIsPayed = value;
					this.SendPropertyChanged("InstallMentIsPayed");
					this.OnInstallMentIsPayedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstallMentDiscountNotice")]
	public partial class InstallMentDiscountNotice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscountNoticeId;
		
		private System.Nullable<int> _InstallMentId;
		
		private System.Nullable<int> _InvoiceId;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<System.DateTime> _InstallMentDate;
		
		private System.Nullable<System.DateTime> _InstallMentPaymentDate;
		
		private System.Nullable<decimal> _InstallMentNewValue;
		
		private System.Nullable<decimal> _InstallMentNewWin;
		
		private System.Nullable<bool> _InstallMentIsClosed;
		
		private System.Nullable<int> _AccountSafeId;
		
		private System.Nullable<bool> _InstallMentIsPayed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountNoticeIdChanging(int value);
    partial void OnDiscountNoticeIdChanged();
    partial void OnInstallMentIdChanging(System.Nullable<int> value);
    partial void OnInstallMentIdChanged();
    partial void OnInvoiceIdChanging(System.Nullable<int> value);
    partial void OnInvoiceIdChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnInstallMentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallMentDateChanged();
    partial void OnInstallMentPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallMentPaymentDateChanged();
    partial void OnInstallMentNewValueChanging(System.Nullable<decimal> value);
    partial void OnInstallMentNewValueChanged();
    partial void OnInstallMentNewWinChanging(System.Nullable<decimal> value);
    partial void OnInstallMentNewWinChanged();
    partial void OnInstallMentIsClosedChanging(System.Nullable<bool> value);
    partial void OnInstallMentIsClosedChanged();
    partial void OnAccountSafeIdChanging(System.Nullable<int> value);
    partial void OnAccountSafeIdChanged();
    partial void OnInstallMentIsPayedChanging(System.Nullable<bool> value);
    partial void OnInstallMentIsPayedChanged();
    #endregion
		
		public InstallMentDiscountNotice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountNoticeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiscountNoticeId
		{
			get
			{
				return this._DiscountNoticeId;
			}
			set
			{
				if ((this._DiscountNoticeId != value))
				{
					this.OnDiscountNoticeIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountNoticeId = value;
					this.SendPropertyChanged("DiscountNoticeId");
					this.OnDiscountNoticeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentId", DbType="Int")]
		public System.Nullable<int> InstallMentId
		{
			get
			{
				return this._InstallMentId;
			}
			set
			{
				if ((this._InstallMentId != value))
				{
					this.OnInstallMentIdChanging(value);
					this.SendPropertyChanging();
					this._InstallMentId = value;
					this.SendPropertyChanged("InstallMentId");
					this.OnInstallMentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InstallMentDate
		{
			get
			{
				return this._InstallMentDate;
			}
			set
			{
				if ((this._InstallMentDate != value))
				{
					this.OnInstallMentDateChanging(value);
					this.SendPropertyChanging();
					this._InstallMentDate = value;
					this.SendPropertyChanged("InstallMentDate");
					this.OnInstallMentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentPaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InstallMentPaymentDate
		{
			get
			{
				return this._InstallMentPaymentDate;
			}
			set
			{
				if ((this._InstallMentPaymentDate != value))
				{
					this.OnInstallMentPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._InstallMentPaymentDate = value;
					this.SendPropertyChanged("InstallMentPaymentDate");
					this.OnInstallMentPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentNewValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InstallMentNewValue
		{
			get
			{
				return this._InstallMentNewValue;
			}
			set
			{
				if ((this._InstallMentNewValue != value))
				{
					this.OnInstallMentNewValueChanging(value);
					this.SendPropertyChanging();
					this._InstallMentNewValue = value;
					this.SendPropertyChanged("InstallMentNewValue");
					this.OnInstallMentNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentNewWin", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InstallMentNewWin
		{
			get
			{
				return this._InstallMentNewWin;
			}
			set
			{
				if ((this._InstallMentNewWin != value))
				{
					this.OnInstallMentNewWinChanging(value);
					this.SendPropertyChanging();
					this._InstallMentNewWin = value;
					this.SendPropertyChanged("InstallMentNewWin");
					this.OnInstallMentNewWinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentIsClosed", DbType="Bit")]
		public System.Nullable<bool> InstallMentIsClosed
		{
			get
			{
				return this._InstallMentIsClosed;
			}
			set
			{
				if ((this._InstallMentIsClosed != value))
				{
					this.OnInstallMentIsClosedChanging(value);
					this.SendPropertyChanging();
					this._InstallMentIsClosed = value;
					this.SendPropertyChanged("InstallMentIsClosed");
					this.OnInstallMentIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSafeId", DbType="Int")]
		public System.Nullable<int> AccountSafeId
		{
			get
			{
				return this._AccountSafeId;
			}
			set
			{
				if ((this._AccountSafeId != value))
				{
					this.OnAccountSafeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountSafeId = value;
					this.SendPropertyChanged("AccountSafeId");
					this.OnAccountSafeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentIsPayed", DbType="Bit")]
		public System.Nullable<bool> InstallMentIsPayed
		{
			get
			{
				return this._InstallMentIsPayed;
			}
			set
			{
				if ((this._InstallMentIsPayed != value))
				{
					this.OnInstallMentIsPayedChanging(value);
					this.SendPropertyChanging();
					this._InstallMentIsPayed = value;
					this.SendPropertyChanged("InstallMentIsPayed");
					this.OnInstallMentIsPayedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceDetail")]
	public partial class InvoiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceDetailId;
		
		private System.Nullable<int> _InvoiceId;
		
		private System.Nullable<int> _ItemId;
		
		private System.Nullable<decimal> _ItemSellPrice;
		
		private System.Nullable<decimal> _ItemBuyPrice;
		
		private System.Nullable<decimal> _Quantity;
		
		private string _InvoiceNotes;
		
		private string _ItemSerial;
		
		private System.Nullable<decimal> _ItemDiscount;
		
		private System.Nullable<decimal> _ItemMainQuantity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceDetailIdChanging(int value);
    partial void OnInvoiceDetailIdChanged();
    partial void OnInvoiceIdChanging(System.Nullable<int> value);
    partial void OnInvoiceIdChanged();
    partial void OnItemIdChanging(System.Nullable<int> value);
    partial void OnItemIdChanged();
    partial void OnItemSellPriceChanging(System.Nullable<decimal> value);
    partial void OnItemSellPriceChanged();
    partial void OnItemBuyPriceChanging(System.Nullable<decimal> value);
    partial void OnItemBuyPriceChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnInvoiceNotesChanging(string value);
    partial void OnInvoiceNotesChanged();
    partial void OnItemSerialChanging(string value);
    partial void OnItemSerialChanged();
    partial void OnItemDiscountChanging(System.Nullable<decimal> value);
    partial void OnItemDiscountChanged();
    partial void OnItemMainQuantityChanging(System.Nullable<decimal> value);
    partial void OnItemMainQuantityChanged();
    #endregion
		
		public InvoiceDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceDetailId
		{
			get
			{
				return this._InvoiceDetailId;
			}
			set
			{
				if ((this._InvoiceDetailId != value))
				{
					this.OnInvoiceDetailIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDetailId = value;
					this.SendPropertyChanged("InvoiceDetailId");
					this.OnInvoiceDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int")]
		public System.Nullable<int> ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSellPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ItemSellPrice
		{
			get
			{
				return this._ItemSellPrice;
			}
			set
			{
				if ((this._ItemSellPrice != value))
				{
					this.OnItemSellPriceChanging(value);
					this.SendPropertyChanging();
					this._ItemSellPrice = value;
					this.SendPropertyChanged("ItemSellPrice");
					this.OnItemSellPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemBuyPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ItemBuyPrice
		{
			get
			{
				return this._ItemBuyPrice;
			}
			set
			{
				if ((this._ItemBuyPrice != value))
				{
					this.OnItemBuyPriceChanging(value);
					this.SendPropertyChanging();
					this._ItemBuyPrice = value;
					this.SendPropertyChanged("ItemBuyPrice");
					this.OnItemBuyPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNotes", DbType="NVarChar(MAX)")]
		public string InvoiceNotes
		{
			get
			{
				return this._InvoiceNotes;
			}
			set
			{
				if ((this._InvoiceNotes != value))
				{
					this.OnInvoiceNotesChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNotes = value;
					this.SendPropertyChanged("InvoiceNotes");
					this.OnInvoiceNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSerial", DbType="NVarChar(MAX)")]
		public string ItemSerial
		{
			get
			{
				return this._ItemSerial;
			}
			set
			{
				if ((this._ItemSerial != value))
				{
					this.OnItemSerialChanging(value);
					this.SendPropertyChanging();
					this._ItemSerial = value;
					this.SendPropertyChanged("ItemSerial");
					this.OnItemSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDiscount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ItemDiscount
		{
			get
			{
				return this._ItemDiscount;
			}
			set
			{
				if ((this._ItemDiscount != value))
				{
					this.OnItemDiscountChanging(value);
					this.SendPropertyChanging();
					this._ItemDiscount = value;
					this.SendPropertyChanged("ItemDiscount");
					this.OnItemDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemMainQuantity", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ItemMainQuantity
		{
			get
			{
				return this._ItemMainQuantity;
			}
			set
			{
				if ((this._ItemMainQuantity != value))
				{
					this.OnItemMainQuantityChanging(value);
					this.SendPropertyChanging();
					this._ItemMainQuantity = value;
					this.SendPropertyChanged("ItemMainQuantity");
					this.OnItemMainQuantityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobFlag")]
	public partial class JobFlag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobFlagId;
		
		private string _JobFlagDesc;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobFlagIdChanging(int value);
    partial void OnJobFlagIdChanged();
    partial void OnJobFlagDescChanging(string value);
    partial void OnJobFlagDescChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public JobFlag()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobFlagId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobFlagId
		{
			get
			{
				return this._JobFlagId;
			}
			set
			{
				if ((this._JobFlagId != value))
				{
					this.OnJobFlagIdChanging(value);
					this.SendPropertyChanging();
					this._JobFlagId = value;
					this.SendPropertyChanged("JobFlagId");
					this.OnJobFlagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobFlagDesc", DbType="NVarChar(MAX)")]
		public string JobFlagDesc
		{
			get
			{
				return this._JobFlagDesc;
			}
			set
			{
				if ((this._JobFlagDesc != value))
				{
					this.OnJobFlagDescChanging(value);
					this.SendPropertyChanging();
					this._JobFlagDesc = value;
					this.SendPropertyChanged("JobFlagDesc");
					this.OnJobFlagDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentType")]
	public partial class PaymentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentTypeId;
		
		private string _PaymentTypeDesc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentTypeIdChanging(int value);
    partial void OnPaymentTypeIdChanged();
    partial void OnPaymentTypeDescChanging(string value);
    partial void OnPaymentTypeDescChanged();
    #endregion
		
		public PaymentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					this.OnPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeId = value;
					this.SendPropertyChanged("PaymentTypeId");
					this.OnPaymentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeDesc", DbType="NVarChar(50)")]
		public string PaymentTypeDesc
		{
			get
			{
				return this._PaymentTypeDesc;
			}
			set
			{
				if ((this._PaymentTypeDesc != value))
				{
					this.OnPaymentTypeDescChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeDesc = value;
					this.SendPropertyChanged("PaymentTypeDesc");
					this.OnPaymentTypeDescChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rank")]
	public partial class Rank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RankId;
		
		private string _RankDesc;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRankIdChanging(int value);
    partial void OnRankIdChanged();
    partial void OnRankDescChanging(string value);
    partial void OnRankDescChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Rank()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RankId
		{
			get
			{
				return this._RankId;
			}
			set
			{
				if ((this._RankId != value))
				{
					this.OnRankIdChanging(value);
					this.SendPropertyChanging();
					this._RankId = value;
					this.SendPropertyChanged("RankId");
					this.OnRankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankDesc", DbType="NVarChar(MAX)")]
		public string RankDesc
		{
			get
			{
				return this._RankDesc;
			}
			set
			{
				if ((this._RankDesc != value))
				{
					this.OnRankDescChanging(value);
					this.SendPropertyChanging();
					this._RankDesc = value;
					this.SendPropertyChanged("RankDesc");
					this.OnRankDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RankActionDetail")]
	public partial class RankActionDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RankActionDetailId;
		
		private System.Nullable<int> _RankId;
		
		private System.Nullable<int> _ActionDetailId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRankActionDetailIdChanging(int value);
    partial void OnRankActionDetailIdChanged();
    partial void OnRankIdChanging(System.Nullable<int> value);
    partial void OnRankIdChanged();
    partial void OnActionDetailIdChanging(System.Nullable<int> value);
    partial void OnActionDetailIdChanged();
    #endregion
		
		public RankActionDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankActionDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RankActionDetailId
		{
			get
			{
				return this._RankActionDetailId;
			}
			set
			{
				if ((this._RankActionDetailId != value))
				{
					this.OnRankActionDetailIdChanging(value);
					this.SendPropertyChanging();
					this._RankActionDetailId = value;
					this.SendPropertyChanged("RankActionDetailId");
					this.OnRankActionDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankId", DbType="Int")]
		public System.Nullable<int> RankId
		{
			get
			{
				return this._RankId;
			}
			set
			{
				if ((this._RankId != value))
				{
					this.OnRankIdChanging(value);
					this.SendPropertyChanging();
					this._RankId = value;
					this.SendPropertyChanged("RankId");
					this.OnRankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDetailId", DbType="Int")]
		public System.Nullable<int> ActionDetailId
		{
			get
			{
				return this._ActionDetailId;
			}
			set
			{
				if ((this._ActionDetailId != value))
				{
					this.OnActionDetailIdChanging(value);
					this.SendPropertyChanging();
					this._ActionDetailId = value;
					this.SendPropertyChanged("ActionDetailId");
					this.OnActionDetailIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserName;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<int> _RankId;
		
		private string _PassWord;
		
		private System.Nullable<bool> _IsActive;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnRankIdChanging(System.Nullable<int> value);
    partial void OnRankIdChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankId", DbType="Int")]
		public System.Nullable<int> RankId
		{
			get
			{
				return this._RankId;
			}
			set
			{
				if ((this._RankId != value))
				{
					this.OnRankIdChanging(value);
					this.SendPropertyChanging();
					this._RankId = value;
					this.SendPropertyChanged("RankId");
					this.OnRankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="NVarChar(MAX)")]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAction")]
	public partial class UserAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserActionId;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _RankId;
		
		private System.Nullable<int> _ActionId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserActionIdChanging(int value);
    partial void OnUserActionIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnRankIdChanging(System.Nullable<int> value);
    partial void OnRankIdChanged();
    partial void OnActionIdChanging(System.Nullable<int> value);
    partial void OnActionIdChanged();
    #endregion
		
		public UserAction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserActionId
		{
			get
			{
				return this._UserActionId;
			}
			set
			{
				if ((this._UserActionId != value))
				{
					this.OnUserActionIdChanging(value);
					this.SendPropertyChanging();
					this._UserActionId = value;
					this.SendPropertyChanged("UserActionId");
					this.OnUserActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankId", DbType="Int")]
		public System.Nullable<int> RankId
		{
			get
			{
				return this._RankId;
			}
			set
			{
				if ((this._RankId != value))
				{
					this.OnRankIdChanging(value);
					this.SendPropertyChanging();
					this._RankId = value;
					this.SendPropertyChanged("RankId");
					this.OnRankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionId", DbType="Int")]
		public System.Nullable<int> ActionId
		{
			get
			{
				return this._ActionId;
			}
			set
			{
				if ((this._ActionId != value))
				{
					this.OnActionIdChanging(value);
					this.SendPropertyChanging();
					this._ActionId = value;
					this.SendPropertyChanged("ActionId");
					this.OnActionIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobId;
		
		private string _JobDesc;
		
		private System.Nullable<int> _JobFlagId;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobIdChanging(int value);
    partial void OnJobIdChanged();
    partial void OnJobDescChanging(string value);
    partial void OnJobDescChanged();
    partial void OnJobFlagIdChanging(System.Nullable<int> value);
    partial void OnJobFlagIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Job()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDesc", DbType="NVarChar(MAX)")]
		public string JobDesc
		{
			get
			{
				return this._JobDesc;
			}
			set
			{
				if ((this._JobDesc != value))
				{
					this.OnJobDescChanging(value);
					this.SendPropertyChanging();
					this._JobDesc = value;
					this.SendPropertyChanged("JobDesc");
					this.OnJobDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobFlagId", DbType="Int")]
		public System.Nullable<int> JobFlagId
		{
			get
			{
				return this._JobFlagId;
			}
			set
			{
				if ((this._JobFlagId != value))
				{
					this.OnJobFlagIdChanging(value);
					this.SendPropertyChanging();
					this._JobFlagId = value;
					this.SendPropertyChanged("JobFlagId");
					this.OnJobFlagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MovementType")]
	public partial class MovementType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MovementTypeFlagId;
		
		private string _MovementTypeDesc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovementTypeFlagIdChanging(int value);
    partial void OnMovementTypeFlagIdChanged();
    partial void OnMovementTypeDescChanging(string value);
    partial void OnMovementTypeDescChanged();
    #endregion
		
		public MovementType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovementTypeFlagId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MovementTypeFlagId
		{
			get
			{
				return this._MovementTypeFlagId;
			}
			set
			{
				if ((this._MovementTypeFlagId != value))
				{
					this.OnMovementTypeFlagIdChanging(value);
					this.SendPropertyChanging();
					this._MovementTypeFlagId = value;
					this.SendPropertyChanged("MovementTypeFlagId");
					this.OnMovementTypeFlagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovementTypeDesc", DbType="NVarChar(MAX)")]
		public string MovementTypeDesc
		{
			get
			{
				return this._MovementTypeDesc;
			}
			set
			{
				if ((this._MovementTypeDesc != value))
				{
					this.OnMovementTypeDescChanging(value);
					this.SendPropertyChanging();
					this._MovementTypeDesc = value;
					this.SendPropertyChanged("MovementTypeDesc");
					this.OnMovementTypeDescChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Items")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemId;
		
		private string _ItemDesc;
		
		private string _ItemNotes;
		
		private System.Nullable<bool> _ItemIsActive;
		
		private System.Nullable<decimal> _SoldQuantity;
		
		private string _ItemBarCode;
		
		private System.Nullable<bool> _IsSerial;
		
		private System.Nullable<int> _GroupDetailId;
		
		private System.Nullable<decimal> _FirstPerioudBalance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnItemDescChanging(string value);
    partial void OnItemDescChanged();
    partial void OnItemNotesChanging(string value);
    partial void OnItemNotesChanged();
    partial void OnItemIsActiveChanging(System.Nullable<bool> value);
    partial void OnItemIsActiveChanged();
    partial void OnSoldQuantityChanging(System.Nullable<decimal> value);
    partial void OnSoldQuantityChanged();
    partial void OnItemBarCodeChanging(string value);
    partial void OnItemBarCodeChanged();
    partial void OnIsSerialChanging(System.Nullable<bool> value);
    partial void OnIsSerialChanged();
    partial void OnGroupDetailIdChanging(System.Nullable<int> value);
    partial void OnGroupDetailIdChanged();
    partial void OnFirstPerioudBalanceChanging(System.Nullable<decimal> value);
    partial void OnFirstPerioudBalanceChanged();
    #endregion
		
		public Item()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDesc", DbType="NVarChar(MAX)")]
		public string ItemDesc
		{
			get
			{
				return this._ItemDesc;
			}
			set
			{
				if ((this._ItemDesc != value))
				{
					this.OnItemDescChanging(value);
					this.SendPropertyChanging();
					this._ItemDesc = value;
					this.SendPropertyChanged("ItemDesc");
					this.OnItemDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNotes", DbType="NVarChar(MAX)")]
		public string ItemNotes
		{
			get
			{
				return this._ItemNotes;
			}
			set
			{
				if ((this._ItemNotes != value))
				{
					this.OnItemNotesChanging(value);
					this.SendPropertyChanging();
					this._ItemNotes = value;
					this.SendPropertyChanged("ItemNotes");
					this.OnItemNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemIsActive", DbType="Bit")]
		public System.Nullable<bool> ItemIsActive
		{
			get
			{
				return this._ItemIsActive;
			}
			set
			{
				if ((this._ItemIsActive != value))
				{
					this.OnItemIsActiveChanging(value);
					this.SendPropertyChanging();
					this._ItemIsActive = value;
					this.SendPropertyChanged("ItemIsActive");
					this.OnItemIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldQuantity", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> SoldQuantity
		{
			get
			{
				return this._SoldQuantity;
			}
			set
			{
				if ((this._SoldQuantity != value))
				{
					this.OnSoldQuantityChanging(value);
					this.SendPropertyChanging();
					this._SoldQuantity = value;
					this.SendPropertyChanged("SoldQuantity");
					this.OnSoldQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemBarCode", DbType="NVarChar(50)")]
		public string ItemBarCode
		{
			get
			{
				return this._ItemBarCode;
			}
			set
			{
				if ((this._ItemBarCode != value))
				{
					this.OnItemBarCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemBarCode = value;
					this.SendPropertyChanged("ItemBarCode");
					this.OnItemBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSerial", DbType="Bit")]
		public System.Nullable<bool> IsSerial
		{
			get
			{
				return this._IsSerial;
			}
			set
			{
				if ((this._IsSerial != value))
				{
					this.OnIsSerialChanging(value);
					this.SendPropertyChanging();
					this._IsSerial = value;
					this.SendPropertyChanged("IsSerial");
					this.OnIsSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupDetailId", DbType="Int")]
		public System.Nullable<int> GroupDetailId
		{
			get
			{
				return this._GroupDetailId;
			}
			set
			{
				if ((this._GroupDetailId != value))
				{
					this.OnGroupDetailIdChanging(value);
					this.SendPropertyChanging();
					this._GroupDetailId = value;
					this.SendPropertyChanged("GroupDetailId");
					this.OnGroupDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstPerioudBalance", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> FirstPerioudBalance
		{
			get
			{
				return this._FirstPerioudBalance;
			}
			set
			{
				if ((this._FirstPerioudBalance != value))
				{
					this.OnFirstPerioudBalanceChanging(value);
					this.SendPropertyChanging();
					this._FirstPerioudBalance = value;
					this.SendPropertyChanged("FirstPerioudBalance");
					this.OnFirstPerioudBalanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupDetail")]
	public partial class GroupDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupDetailId;
		
		private string _GroupDetailDesc;
		
		private System.Nullable<int> _GroupId;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupDetailIdChanging(int value);
    partial void OnGroupDetailIdChanged();
    partial void OnGroupDetailDescChanging(string value);
    partial void OnGroupDetailDescChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public GroupDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupDetailId
		{
			get
			{
				return this._GroupDetailId;
			}
			set
			{
				if ((this._GroupDetailId != value))
				{
					this.OnGroupDetailIdChanging(value);
					this.SendPropertyChanging();
					this._GroupDetailId = value;
					this.SendPropertyChanged("GroupDetailId");
					this.OnGroupDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupDetailDesc", DbType="NVarChar(MAX)")]
		public string GroupDetailDesc
		{
			get
			{
				return this._GroupDetailDesc;
			}
			set
			{
				if ((this._GroupDetailDesc != value))
				{
					this.OnGroupDetailDescChanging(value);
					this.SendPropertyChanging();
					this._GroupDetailDesc = value;
					this.SendPropertyChanged("GroupDetailDesc");
					this.OnGroupDetailDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemSerial")]
	public partial class ItemSerial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemSerialId;
		
		private System.Nullable<int> _ItemId;
		
		private string _ItemDesc;
		
		private System.Nullable<System.DateTime> _CurrentDate;
		
		private System.Nullable<int> _AccountId;
		
		private string _ItemSerial1;
		
		private string _ItemBarCode;
		
		private string _ItemColor;
		
		private string _ItemSize;
		
		private string _ItemSceonedDesc;
		
		private System.Nullable<decimal> _ItemBuyPrice;
		
		private System.Nullable<decimal> _ItemSellPriceCash;
		
		private System.Nullable<decimal> _ItemSellPriceInstallment;
		
		private System.Nullable<bool> _ItemIsSold;
		
		private System.Nullable<int> _DocNum;
		
		private System.Nullable<int> _DocTypeId;
		
		private System.Nullable<decimal> _QuantityIn;
		
		private System.Nullable<decimal> _QuantityOut;
		
		private System.Nullable<decimal> _CurrentBalance;
		
		private System.Nullable<bool> _IsSerial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemSerialIdChanging(int value);
    partial void OnItemSerialIdChanged();
    partial void OnItemIdChanging(System.Nullable<int> value);
    partial void OnItemIdChanged();
    partial void OnItemDescChanging(string value);
    partial void OnItemDescChanged();
    partial void OnCurrentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCurrentDateChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnItemSerial1Changing(string value);
    partial void OnItemSerial1Changed();
    partial void OnItemBarCodeChanging(string value);
    partial void OnItemBarCodeChanged();
    partial void OnItemColorChanging(string value);
    partial void OnItemColorChanged();
    partial void OnItemSizeChanging(string value);
    partial void OnItemSizeChanged();
    partial void OnItemSceonedDescChanging(string value);
    partial void OnItemSceonedDescChanged();
    partial void OnItemBuyPriceChanging(System.Nullable<decimal> value);
    partial void OnItemBuyPriceChanged();
    partial void OnItemSellPriceCashChanging(System.Nullable<decimal> value);
    partial void OnItemSellPriceCashChanged();
    partial void OnItemSellPriceInstallmentChanging(System.Nullable<decimal> value);
    partial void OnItemSellPriceInstallmentChanged();
    partial void OnItemIsSoldChanging(System.Nullable<bool> value);
    partial void OnItemIsSoldChanged();
    partial void OnDocNumChanging(System.Nullable<int> value);
    partial void OnDocNumChanged();
    partial void OnDocTypeIdChanging(System.Nullable<int> value);
    partial void OnDocTypeIdChanged();
    partial void OnQuantityInChanging(System.Nullable<decimal> value);
    partial void OnQuantityInChanged();
    partial void OnQuantityOutChanging(System.Nullable<decimal> value);
    partial void OnQuantityOutChanged();
    partial void OnCurrentBalanceChanging(System.Nullable<decimal> value);
    partial void OnCurrentBalanceChanged();
    partial void OnIsSerialChanging(System.Nullable<bool> value);
    partial void OnIsSerialChanged();
    #endregion
		
		public ItemSerial()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSerialId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemSerialId
		{
			get
			{
				return this._ItemSerialId;
			}
			set
			{
				if ((this._ItemSerialId != value))
				{
					this.OnItemSerialIdChanging(value);
					this.SendPropertyChanging();
					this._ItemSerialId = value;
					this.SendPropertyChanged("ItemSerialId");
					this.OnItemSerialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int")]
		public System.Nullable<int> ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDesc", DbType="NVarChar(MAX)")]
		public string ItemDesc
		{
			get
			{
				return this._ItemDesc;
			}
			set
			{
				if ((this._ItemDesc != value))
				{
					this.OnItemDescChanging(value);
					this.SendPropertyChanging();
					this._ItemDesc = value;
					this.SendPropertyChanged("ItemDesc");
					this.OnItemDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CurrentDate
		{
			get
			{
				return this._CurrentDate;
			}
			set
			{
				if ((this._CurrentDate != value))
				{
					this.OnCurrentDateChanging(value);
					this.SendPropertyChanging();
					this._CurrentDate = value;
					this.SendPropertyChanged("CurrentDate");
					this.OnCurrentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ItemSerial", Storage="_ItemSerial1", DbType="NVarChar(MAX)")]
		public string ItemSerial1
		{
			get
			{
				return this._ItemSerial1;
			}
			set
			{
				if ((this._ItemSerial1 != value))
				{
					this.OnItemSerial1Changing(value);
					this.SendPropertyChanging();
					this._ItemSerial1 = value;
					this.SendPropertyChanged("ItemSerial1");
					this.OnItemSerial1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemBarCode", DbType="NVarChar(MAX)")]
		public string ItemBarCode
		{
			get
			{
				return this._ItemBarCode;
			}
			set
			{
				if ((this._ItemBarCode != value))
				{
					this.OnItemBarCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemBarCode = value;
					this.SendPropertyChanged("ItemBarCode");
					this.OnItemBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemColor", DbType="NVarChar(MAX)")]
		public string ItemColor
		{
			get
			{
				return this._ItemColor;
			}
			set
			{
				if ((this._ItemColor != value))
				{
					this.OnItemColorChanging(value);
					this.SendPropertyChanging();
					this._ItemColor = value;
					this.SendPropertyChanged("ItemColor");
					this.OnItemColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSize", DbType="NVarChar(MAX)")]
		public string ItemSize
		{
			get
			{
				return this._ItemSize;
			}
			set
			{
				if ((this._ItemSize != value))
				{
					this.OnItemSizeChanging(value);
					this.SendPropertyChanging();
					this._ItemSize = value;
					this.SendPropertyChanged("ItemSize");
					this.OnItemSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSceonedDesc", DbType="NVarChar(MAX)")]
		public string ItemSceonedDesc
		{
			get
			{
				return this._ItemSceonedDesc;
			}
			set
			{
				if ((this._ItemSceonedDesc != value))
				{
					this.OnItemSceonedDescChanging(value);
					this.SendPropertyChanging();
					this._ItemSceonedDesc = value;
					this.SendPropertyChanged("ItemSceonedDesc");
					this.OnItemSceonedDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemBuyPrice", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ItemBuyPrice
		{
			get
			{
				return this._ItemBuyPrice;
			}
			set
			{
				if ((this._ItemBuyPrice != value))
				{
					this.OnItemBuyPriceChanging(value);
					this.SendPropertyChanging();
					this._ItemBuyPrice = value;
					this.SendPropertyChanged("ItemBuyPrice");
					this.OnItemBuyPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSellPriceCash", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ItemSellPriceCash
		{
			get
			{
				return this._ItemSellPriceCash;
			}
			set
			{
				if ((this._ItemSellPriceCash != value))
				{
					this.OnItemSellPriceCashChanging(value);
					this.SendPropertyChanging();
					this._ItemSellPriceCash = value;
					this.SendPropertyChanged("ItemSellPriceCash");
					this.OnItemSellPriceCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSellPriceInstallment", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ItemSellPriceInstallment
		{
			get
			{
				return this._ItemSellPriceInstallment;
			}
			set
			{
				if ((this._ItemSellPriceInstallment != value))
				{
					this.OnItemSellPriceInstallmentChanging(value);
					this.SendPropertyChanging();
					this._ItemSellPriceInstallment = value;
					this.SendPropertyChanged("ItemSellPriceInstallment");
					this.OnItemSellPriceInstallmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemIsSold", DbType="Bit")]
		public System.Nullable<bool> ItemIsSold
		{
			get
			{
				return this._ItemIsSold;
			}
			set
			{
				if ((this._ItemIsSold != value))
				{
					this.OnItemIsSoldChanging(value);
					this.SendPropertyChanging();
					this._ItemIsSold = value;
					this.SendPropertyChanged("ItemIsSold");
					this.OnItemIsSoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocNum", DbType="Int")]
		public System.Nullable<int> DocNum
		{
			get
			{
				return this._DocNum;
			}
			set
			{
				if ((this._DocNum != value))
				{
					this.OnDocNumChanging(value);
					this.SendPropertyChanging();
					this._DocNum = value;
					this.SendPropertyChanged("DocNum");
					this.OnDocNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocTypeId", DbType="Int")]
		public System.Nullable<int> DocTypeId
		{
			get
			{
				return this._DocTypeId;
			}
			set
			{
				if ((this._DocTypeId != value))
				{
					this.OnDocTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DocTypeId = value;
					this.SendPropertyChanged("DocTypeId");
					this.OnDocTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityIn", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> QuantityIn
		{
			get
			{
				return this._QuantityIn;
			}
			set
			{
				if ((this._QuantityIn != value))
				{
					this.OnQuantityInChanging(value);
					this.SendPropertyChanging();
					this._QuantityIn = value;
					this.SendPropertyChanged("QuantityIn");
					this.OnQuantityInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityOut", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> QuantityOut
		{
			get
			{
				return this._QuantityOut;
			}
			set
			{
				if ((this._QuantityOut != value))
				{
					this.OnQuantityOutChanging(value);
					this.SendPropertyChanging();
					this._QuantityOut = value;
					this.SendPropertyChanged("QuantityOut");
					this.OnQuantityOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentBalance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CurrentBalance
		{
			get
			{
				return this._CurrentBalance;
			}
			set
			{
				if ((this._CurrentBalance != value))
				{
					this.OnCurrentBalanceChanging(value);
					this.SendPropertyChanging();
					this._CurrentBalance = value;
					this.SendPropertyChanged("CurrentBalance");
					this.OnCurrentBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSerial", DbType="Bit")]
		public System.Nullable<bool> IsSerial
		{
			get
			{
				return this._IsSerial;
			}
			set
			{
				if ((this._IsSerial != value))
				{
					this.OnIsSerialChanging(value);
					this.SendPropertyChanging();
					this._IsSerial = value;
					this.SendPropertyChanged("IsSerial");
					this.OnIsSerialChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceId;
		
		private System.Nullable<int> _DocTypeId;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _BranchId;
		
		private System.Nullable<int> _StoreId;
		
		private System.Nullable<int> _SuppOrCusAccountId;
		
		private System.Nullable<int> _SafeAccountId;
		
		private System.Nullable<decimal> _TotalValue;
		
		private System.Nullable<decimal> _SubmittedValue;
		
		private System.Nullable<decimal> _InstallMentValue;
		
		private System.Nullable<decimal> _TotalTaxAdding;
		
		private System.Nullable<decimal> _TotalTaxAddingPercentage;
		
		private System.Nullable<decimal> _TotalTaxDiss;
		
		private System.Nullable<decimal> _TotalTaxDissPercentage;
		
		private System.Nullable<decimal> _TotalItemDiscount;
		
		private System.Nullable<decimal> _RashioValue;
		
		private System.Nullable<decimal> _RashioPercentage;
		
		private System.Nullable<decimal> _MainOverAllDiscount;
		
		private System.Nullable<decimal> _TotalNetValeOverAll;
		
		private System.Nullable<bool> _PendingInvoice;
		
		private System.Nullable<bool> _IsClosed;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<bool> _IsEdited;
		
		private System.Nullable<bool> _IsStoreTransfferred;
		
		private System.Nullable<decimal> _PerviousAccount;
		
		private System.Nullable<decimal> _NumberOfInstallment;
		
		private System.Nullable<System.DateTime> _DateFirstInstallment;
		
		private System.Nullable<bool> _IsInstallment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    partial void OnDocTypeIdChanging(System.Nullable<int> value);
    partial void OnDocTypeIdChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnBranchIdChanging(System.Nullable<int> value);
    partial void OnBranchIdChanged();
    partial void OnStoreIdChanging(System.Nullable<int> value);
    partial void OnStoreIdChanged();
    partial void OnSuppOrCusAccountIdChanging(System.Nullable<int> value);
    partial void OnSuppOrCusAccountIdChanged();
    partial void OnSafeAccountIdChanging(System.Nullable<int> value);
    partial void OnSafeAccountIdChanged();
    partial void OnTotalValueChanging(System.Nullable<decimal> value);
    partial void OnTotalValueChanged();
    partial void OnSubmittedValueChanging(System.Nullable<decimal> value);
    partial void OnSubmittedValueChanged();
    partial void OnInstallMentValueChanging(System.Nullable<decimal> value);
    partial void OnInstallMentValueChanged();
    partial void OnTotalTaxAddingChanging(System.Nullable<decimal> value);
    partial void OnTotalTaxAddingChanged();
    partial void OnTotalTaxAddingPercentageChanging(System.Nullable<decimal> value);
    partial void OnTotalTaxAddingPercentageChanged();
    partial void OnTotalTaxDissChanging(System.Nullable<decimal> value);
    partial void OnTotalTaxDissChanged();
    partial void OnTotalTaxDissPercentageChanging(System.Nullable<decimal> value);
    partial void OnTotalTaxDissPercentageChanged();
    partial void OnTotalItemDiscountChanging(System.Nullable<decimal> value);
    partial void OnTotalItemDiscountChanged();
    partial void OnRashioValueChanging(System.Nullable<decimal> value);
    partial void OnRashioValueChanged();
    partial void OnRashioPercentageChanging(System.Nullable<decimal> value);
    partial void OnRashioPercentageChanged();
    partial void OnMainOverAllDiscountChanging(System.Nullable<decimal> value);
    partial void OnMainOverAllDiscountChanged();
    partial void OnTotalNetValeOverAllChanging(System.Nullable<decimal> value);
    partial void OnTotalNetValeOverAllChanged();
    partial void OnPendingInvoiceChanging(System.Nullable<bool> value);
    partial void OnPendingInvoiceChanged();
    partial void OnIsClosedChanging(System.Nullable<bool> value);
    partial void OnIsClosedChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnIsEditedChanging(System.Nullable<bool> value);
    partial void OnIsEditedChanged();
    partial void OnIsStoreTransfferredChanging(System.Nullable<bool> value);
    partial void OnIsStoreTransfferredChanged();
    partial void OnPerviousAccountChanging(System.Nullable<decimal> value);
    partial void OnPerviousAccountChanged();
    partial void OnNumberOfInstallmentChanging(System.Nullable<decimal> value);
    partial void OnNumberOfInstallmentChanged();
    partial void OnDateFirstInstallmentChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFirstInstallmentChanged();
    partial void OnIsInstallmentChanging(System.Nullable<bool> value);
    partial void OnIsInstallmentChanged();
    #endregion
		
		public Invoice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocTypeId", DbType="Int")]
		public System.Nullable<int> DocTypeId
		{
			get
			{
				return this._DocTypeId;
			}
			set
			{
				if ((this._DocTypeId != value))
				{
					this.OnDocTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DocTypeId = value;
					this.SendPropertyChanged("DocTypeId");
					this.OnDocTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int")]
		public System.Nullable<int> BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreId", DbType="Int")]
		public System.Nullable<int> StoreId
		{
			get
			{
				return this._StoreId;
			}
			set
			{
				if ((this._StoreId != value))
				{
					this.OnStoreIdChanging(value);
					this.SendPropertyChanging();
					this._StoreId = value;
					this.SendPropertyChanged("StoreId");
					this.OnStoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuppOrCusAccountId", DbType="Int")]
		public System.Nullable<int> SuppOrCusAccountId
		{
			get
			{
				return this._SuppOrCusAccountId;
			}
			set
			{
				if ((this._SuppOrCusAccountId != value))
				{
					this.OnSuppOrCusAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SuppOrCusAccountId = value;
					this.SendPropertyChanged("SuppOrCusAccountId");
					this.OnSuppOrCusAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeAccountId", DbType="Int")]
		public System.Nullable<int> SafeAccountId
		{
			get
			{
				return this._SafeAccountId;
			}
			set
			{
				if ((this._SafeAccountId != value))
				{
					this.OnSafeAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SafeAccountId = value;
					this.SendPropertyChanged("SafeAccountId");
					this.OnSafeAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalValue
		{
			get
			{
				return this._TotalValue;
			}
			set
			{
				if ((this._TotalValue != value))
				{
					this.OnTotalValueChanging(value);
					this.SendPropertyChanging();
					this._TotalValue = value;
					this.SendPropertyChanged("TotalValue");
					this.OnTotalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SubmittedValue
		{
			get
			{
				return this._SubmittedValue;
			}
			set
			{
				if ((this._SubmittedValue != value))
				{
					this.OnSubmittedValueChanging(value);
					this.SendPropertyChanging();
					this._SubmittedValue = value;
					this.SendPropertyChanged("SubmittedValue");
					this.OnSubmittedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMentValue", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> InstallMentValue
		{
			get
			{
				return this._InstallMentValue;
			}
			set
			{
				if ((this._InstallMentValue != value))
				{
					this.OnInstallMentValueChanging(value);
					this.SendPropertyChanging();
					this._InstallMentValue = value;
					this.SendPropertyChanged("InstallMentValue");
					this.OnInstallMentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTaxAdding", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalTaxAdding
		{
			get
			{
				return this._TotalTaxAdding;
			}
			set
			{
				if ((this._TotalTaxAdding != value))
				{
					this.OnTotalTaxAddingChanging(value);
					this.SendPropertyChanging();
					this._TotalTaxAdding = value;
					this.SendPropertyChanged("TotalTaxAdding");
					this.OnTotalTaxAddingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTaxAddingPercentage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalTaxAddingPercentage
		{
			get
			{
				return this._TotalTaxAddingPercentage;
			}
			set
			{
				if ((this._TotalTaxAddingPercentage != value))
				{
					this.OnTotalTaxAddingPercentageChanging(value);
					this.SendPropertyChanging();
					this._TotalTaxAddingPercentage = value;
					this.SendPropertyChanged("TotalTaxAddingPercentage");
					this.OnTotalTaxAddingPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTaxDiss", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalTaxDiss
		{
			get
			{
				return this._TotalTaxDiss;
			}
			set
			{
				if ((this._TotalTaxDiss != value))
				{
					this.OnTotalTaxDissChanging(value);
					this.SendPropertyChanging();
					this._TotalTaxDiss = value;
					this.SendPropertyChanged("TotalTaxDiss");
					this.OnTotalTaxDissChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTaxDissPercentage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalTaxDissPercentage
		{
			get
			{
				return this._TotalTaxDissPercentage;
			}
			set
			{
				if ((this._TotalTaxDissPercentage != value))
				{
					this.OnTotalTaxDissPercentageChanging(value);
					this.SendPropertyChanging();
					this._TotalTaxDissPercentage = value;
					this.SendPropertyChanged("TotalTaxDissPercentage");
					this.OnTotalTaxDissPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalItemDiscount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalItemDiscount
		{
			get
			{
				return this._TotalItemDiscount;
			}
			set
			{
				if ((this._TotalItemDiscount != value))
				{
					this.OnTotalItemDiscountChanging(value);
					this.SendPropertyChanging();
					this._TotalItemDiscount = value;
					this.SendPropertyChanged("TotalItemDiscount");
					this.OnTotalItemDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RashioValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> RashioValue
		{
			get
			{
				return this._RashioValue;
			}
			set
			{
				if ((this._RashioValue != value))
				{
					this.OnRashioValueChanging(value);
					this.SendPropertyChanging();
					this._RashioValue = value;
					this.SendPropertyChanged("RashioValue");
					this.OnRashioValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RashioPercentage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> RashioPercentage
		{
			get
			{
				return this._RashioPercentage;
			}
			set
			{
				if ((this._RashioPercentage != value))
				{
					this.OnRashioPercentageChanging(value);
					this.SendPropertyChanging();
					this._RashioPercentage = value;
					this.SendPropertyChanged("RashioPercentage");
					this.OnRashioPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainOverAllDiscount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MainOverAllDiscount
		{
			get
			{
				return this._MainOverAllDiscount;
			}
			set
			{
				if ((this._MainOverAllDiscount != value))
				{
					this.OnMainOverAllDiscountChanging(value);
					this.SendPropertyChanging();
					this._MainOverAllDiscount = value;
					this.SendPropertyChanged("MainOverAllDiscount");
					this.OnMainOverAllDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNetValeOverAll", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalNetValeOverAll
		{
			get
			{
				return this._TotalNetValeOverAll;
			}
			set
			{
				if ((this._TotalNetValeOverAll != value))
				{
					this.OnTotalNetValeOverAllChanging(value);
					this.SendPropertyChanging();
					this._TotalNetValeOverAll = value;
					this.SendPropertyChanged("TotalNetValeOverAll");
					this.OnTotalNetValeOverAllChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingInvoice", DbType="Bit")]
		public System.Nullable<bool> PendingInvoice
		{
			get
			{
				return this._PendingInvoice;
			}
			set
			{
				if ((this._PendingInvoice != value))
				{
					this.OnPendingInvoiceChanging(value);
					this.SendPropertyChanging();
					this._PendingInvoice = value;
					this.SendPropertyChanged("PendingInvoice");
					this.OnPendingInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit")]
		public System.Nullable<bool> IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEdited", DbType="Bit")]
		public System.Nullable<bool> IsEdited
		{
			get
			{
				return this._IsEdited;
			}
			set
			{
				if ((this._IsEdited != value))
				{
					this.OnIsEditedChanging(value);
					this.SendPropertyChanging();
					this._IsEdited = value;
					this.SendPropertyChanged("IsEdited");
					this.OnIsEditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStoreTransfferred", DbType="Bit")]
		public System.Nullable<bool> IsStoreTransfferred
		{
			get
			{
				return this._IsStoreTransfferred;
			}
			set
			{
				if ((this._IsStoreTransfferred != value))
				{
					this.OnIsStoreTransfferredChanging(value);
					this.SendPropertyChanging();
					this._IsStoreTransfferred = value;
					this.SendPropertyChanged("IsStoreTransfferred");
					this.OnIsStoreTransfferredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerviousAccount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PerviousAccount
		{
			get
			{
				return this._PerviousAccount;
			}
			set
			{
				if ((this._PerviousAccount != value))
				{
					this.OnPerviousAccountChanging(value);
					this.SendPropertyChanging();
					this._PerviousAccount = value;
					this.SendPropertyChanged("PerviousAccount");
					this.OnPerviousAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfInstallment", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NumberOfInstallment
		{
			get
			{
				return this._NumberOfInstallment;
			}
			set
			{
				if ((this._NumberOfInstallment != value))
				{
					this.OnNumberOfInstallmentChanging(value);
					this.SendPropertyChanging();
					this._NumberOfInstallment = value;
					this.SendPropertyChanged("NumberOfInstallment");
					this.OnNumberOfInstallmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFirstInstallment", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFirstInstallment
		{
			get
			{
				return this._DateFirstInstallment;
			}
			set
			{
				if ((this._DateFirstInstallment != value))
				{
					this.OnDateFirstInstallmentChanging(value);
					this.SendPropertyChanging();
					this._DateFirstInstallment = value;
					this.SendPropertyChanged("DateFirstInstallment");
					this.OnDateFirstInstallmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInstallment", DbType="Bit")]
		public System.Nullable<bool> IsInstallment
		{
			get
			{
				return this._IsInstallment;
			}
			set
			{
				if ((this._IsInstallment != value))
				{
					this.OnIsInstallmentChanging(value);
					this.SendPropertyChanging();
					this._IsInstallment = value;
					this.SendPropertyChanged("IsInstallment");
					this.OnIsInstallmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class InseartSerialsResult
	{
		
		private System.Nullable<decimal> _Column1;
		
		public InseartSerialsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class InseartInvoiceDetailResult
	{
		
		private System.Nullable<decimal> _Column1;
		
		public InseartInvoiceDetailResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
